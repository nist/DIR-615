/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.4 2005/04/26 22:13:28 rstory Exp $
 *
 * $Id: dlkEnterpriseReservationTable.h,v 1.1.1.1 2007/08/30 10:28:09 roy Exp $
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef DLKENTERPRISERESERVATIONTABLE_H
#define DLKENTERPRISERESERVATIONTABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

        /** Index reservationIndex is internal */

    typedef struct dlkEnterpriseReservationTable_context_s {
        netsnmp_index   index;
                         /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
        /** INTEGER = ASN_INTEGER */
        long            reservationIndex;

        /** OCTETSTR = ASN_OCTET_STR */
        unsigned char   reservationList[65535];
        long            reservationList_len;


        /*
         * OR
         *
         * Keep a pointer to your data
         */
        void           *data;

        /*
         *add anything else you want here
         */

    } dlkEnterpriseReservationTable_context;

/*************************************************************
 * function declarations
 */
    void            init_dlkEnterpriseReservationTable(void);
    void            initialize_table_dlkEnterpriseReservationTable(void);
    const dlkEnterpriseReservationTable_context
        *dlkEnterpriseReservationTable_get_by_idx(netsnmp_index *);
    const dlkEnterpriseReservationTable_context
        *dlkEnterpriseReservationTable_get_by_idx_rs(netsnmp_index *,
                                                     int row_status);
    int            
        dlkEnterpriseReservationTable_get_value(netsnmp_request_info *,
                                                netsnmp_index *,
                                                netsnmp_table_request_info
                                                *);


/*************************************************************
 * oid declarations
 */
    extern oid      dlkEnterpriseReservationTable_oid[];
    extern size_t   dlkEnterpriseReservationTable_oid_len;

#define dlkEnterpriseReservationTable_TABLE_OID 1,3,6,1,4,1,171,1,4,2,7,1

/*************************************************************
 * column number definitions for table dlkEnterpriseReservationTable
 */
#define COLUMN_RESERVATIONINDEX 1
#define COLUMN_RESERVATIONLIST 2
#define dlkEnterpriseReservationTable_COL_MIN 1
#define dlkEnterpriseReservationTable_COL_MAX 2

    /*
     * comment out the following line if you don't handle SET-REQUEST for dlkEnterpriseReservationTable 
     */
#define dlkEnterpriseReservationTable_SET_HANDLING

    /*
     * comment out the following line if you can't create new rows 
     */
#define dlkEnterpriseReservationTable_ROW_CREATION

    /*
     * comment out the following line if you don't want the secondary index 
     */
#define dlkEnterpriseReservationTable_IDX2

#ifdef dlkEnterpriseReservationTable_SET_HANDLING

    int            
        dlkEnterpriseReservationTable_extract_index
        (dlkEnterpriseReservationTable_context * ctx, netsnmp_index * hdr);

    void           
        dlkEnterpriseReservationTable_set_reserve1(netsnmp_request_group
                                                   *);
    void           
        dlkEnterpriseReservationTable_set_reserve2(netsnmp_request_group
                                                   *);
    void           
        dlkEnterpriseReservationTable_set_action(netsnmp_request_group *);
    void           
        dlkEnterpriseReservationTable_set_commit(netsnmp_request_group *);
    void           
        dlkEnterpriseReservationTable_set_free(netsnmp_request_group *);
    void           
        dlkEnterpriseReservationTable_set_undo(netsnmp_request_group *);

    dlkEnterpriseReservationTable_context
        *dlkEnterpriseReservationTable_duplicate_row
        (dlkEnterpriseReservationTable_context *);
    netsnmp_index 
        *dlkEnterpriseReservationTable_delete_row
        (dlkEnterpriseReservationTable_context *);

    int            
        dlkEnterpriseReservationTable_can_delete
        (dlkEnterpriseReservationTable_context * undo_ctx,
         dlkEnterpriseReservationTable_context * row_ctx,
         netsnmp_request_group * rg);


#ifdef dlkEnterpriseReservationTable_ROW_CREATION
    dlkEnterpriseReservationTable_context
        *dlkEnterpriseReservationTable_create_row(netsnmp_index *);
#endif
#endif

#ifdef dlkEnterpriseReservationTable_IDX2
    dlkEnterpriseReservationTable_context
        *dlkEnterpriseReservationTable_get(const char *name, int len);
#endif

#ifdef __cplusplus
}
#endif
#endif /** DLKENTERPRISERESERVATIONTABLE_H */
